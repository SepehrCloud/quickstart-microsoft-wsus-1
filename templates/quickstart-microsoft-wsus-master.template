{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This master template creates a VPC infrastructure for a multi-AZ, multi-tier deployment of a workload on AWS. It deploys a VPC with bastions and a workload cluster behind an ELB. The cluster is configured to use an S3 bucket for storage  **WARNING** This template creates EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
				{
				  "Label": {
					"default": "Amazon VPC Configuration"
				  },
				  "Parameters": [
					"VPCCIDR",
					"AvailabilityZones",
					"PrivateSubnet1CIDR",
					"PrivateSubnet2CIDR",
					"PublicSubnet1CIDR",
					"PublicSubnet2CIDR"
				  ]
				},
				{
				  "Label": {
					"default": "Amazon EC2 Configuration"
				  },
				  "Parameters": [
					"WSUSServerNetBIOSName",
					"KeyPairName",
					"WindowsVersion",
					"WorkloadInstanceType"
				  ]
				},
				{
				  "Label": {
					"default": "WSUS Configuration"
				  },
				  "Parameters": [
					"WSUSLanguagesList",
					"WSUSProductList",
					"WSUSClassification",
					"WSUSNumOfSyncsPerDay"
				  ]
				},
				{
				  "Label": {
					"default": "AWS Quick Start Configuration"
				  },
				  "Parameters": [
					"QSS3BucketName",
					"QSS3KeyPrefix"
				  ]
				}
            ],
            "ParameterLabels": {
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private Subnet 1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private Subnet 2 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "S3BucketName": {
                    "default": "S3 Bucket Name"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
				"KeyPairName": {
				  "default": "SSH Key Name"
				},
				"WorkloadInstanceType": {
				  "default": "Workload Servers Instance Type"
				},
				"WSUSServerNetBIOSName": {
				  "default": "Server NetBIOS Name"
				},
				"WSUSLanguagesList": {
				  "default": "Supported languages"
				},
				"WSUSProductList": {
				  "default": "WSUS Products"
				},
				"WSUSClassification": {
				  "default": "WSUS Classifications"
				},
				"WSUSNumOfSyncsPerDay": {
				  "default": "Number of WSUS Synchronizations per day"
				},
				"WindowsVersion": {
				  "default": "Windows version"
				}
            }
        }
    },
    "Parameters": {
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Only two Availability Zones are used for this deployment, and the logical order of your selections is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR block for the public (DMZ) subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR block for the public (DMZ) subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        },
		"KeyPairName": {
		  "Description": "Name of an existing EC2 key pair. All instances will launch with this key pair.",
		  "Type": "AWS::EC2::KeyPair::KeyName"
		},
		"QSS3BucketName": {
		  "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
		  "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
		  "Default": "aws-quickstart",
		  "Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
		  "Type": "String"
		},
		"QSS3KeyPrefix": {
		  "AllowedPattern": "^[0-9a-zA-Z-/]*$",
		  "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
		  "Default": "quickstart-microsoft-wsus/",
		  "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
		  "Type": "String"
		},
		"WSUSServerNetBIOSName": {
		  "AllowedPattern": "[a-zA-Z0-9\\-]+",
		  "Default": "WSUS",
		  "Description": "NetBIOS name of the WSUS server (up to 15 characters)",
		  "MaxLength": "15",
		  "MinLength": "1",
		  "Type": "String"
		},
		"WSUSLanguagesList": {
		  "Default": "en",
		  "Description": "Configure WSUS enabled languages with a comma delimited list of languages",
		  "Type": "String"
		},
		"WSUSProductList": {
		  "Default": "SQL Server 2012 R2, SQL Server 2016, SQL Server 2017, Windows Server 2012 R2, Windows Server 2016, Windows Server 2019",
		  "Description": "Configure the Platforms that you want WSUS to receive updates",
		  "Type": "String"
		},
		"WSUSClassification": {
		  "Default": "Applications, Update Rollups, Security Updates, Critical Updates, Service Packs, Updates, Drivers, Driver Sets",
		  "Description": "Configure WSUS classifications",
		  "Type": "String"
		},
		"WSUSNumOfSyncsPerDay": {
		  "Default": "1",
		  "Description": "Configure number of WSUS synchronizations per day",
		  "Type": "Number"
		},
		"WindowsVersion": {
		  "AllowedValues": [
			"Windows2019Full",
			"Windows2019Core",
			"Windows2019Full_MSSQL2017Standard"
		  ],
		  "ConstraintDescription": "Must be one of supported Windows versions",
		  "Default": "Windows2019Core",
		  "Description": "Select Windows version to run WSUS. Windows Core is recommended for production environments.",
		  "Type": "String"
		},
		"WorkloadInstanceType": {
		  "AllowedValues": [
			"t2.large",
			"m4.large",
			"m4.xlarge",
			"m4.2xlarge",
			"m4.4xlarge",
			"m4.10xlarge",
			"m3.medium",
			"m3.large",
			"m3.xlarge",
			"m3.2xlarge",
			"c4.large",
			"c4.xlarge",
			"c4.2xlarge",
			"c4.4xlarge",
			"c4.8xlarge",
			"c3.large",
			"c3.xlarge",
			"c3.2xlarge",
			"c3.4xlarge",
			"c3.8xlarge",
			"r3.large",
			"r3.xlarge"
		  ],
		  "ConstraintDescription": "Must contain valid instance type",
		  "Default": "m4.xlarge",
		  "Description": "Type of EC2 instance for the Workload instances",
		  "Type": "String"
		}
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template"
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": "2",
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "WorkloadStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/quickstart-microsoft-wsus-workload.template"
                },
                "Parameters": {                    
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "WSUSServerNetBIOSName": {
                        "Ref": "WSUSServerNetBIOSName"
                    },
					"DomainJoin": "No. Please keep WSUS as a standalone Windows instance.",
                    "DomainAdminPassword": "",
					"DomainAdminUser": "StackAdmin",
					"DomainDNSName": "example.com",
					"DomainMemberSGID": "",
					"DomainNetBIOSName": "EXAMPLE",
					"WSUSLanguagesList": {
                        "Ref": "WSUSLanguagesList"
                    },
					"WSUSProductList": {
                        "Ref": "WSUSProductList"
                    },
					"WSUSClassification": {
                        "Ref": "WSUSClassification"
                    },
					"WSUSNumOfSyncsPerDay": {
                        "Ref": "WSUSNumOfSyncsPerDay"
                    },
					"WindowsVersion": {
                        "Ref": "WindowsVersion"
                    },
					"WorkloadInstanceType": {
                        "Ref": "WorkloadInstanceType"
                    },
					
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        }
    }
}